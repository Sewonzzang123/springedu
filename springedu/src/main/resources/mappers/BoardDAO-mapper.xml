<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.BoardDAO-mapper">

	<!-- https://mybatis.org/mybatis-3/ko/dynamic-sql.html 마이바티스 sql -->

	<!-- 게시글 분류코드 읽어오기 -->
	<select id="getCategory"
		resultType="com.kh.portfolio.board.vo.BoardCategoryVO">
		select cid, cname
		from board_category
	</select>
	<!-- 게시글 작성 -->
	<insert id="write"
		parameterType="com.kh.portfolio.board.vo.BoardVO">
		insert into board(
		bnum,
		bcategory,
		btitle,
		bid,
		bnickname,
		bcontent,
		bgroup,
		bstep,
		bindent)
		values (
		board_bnum_seq.nextval,
		#{boardCategoryVO.cid},
		#{btitle},
		#{bid},
		#{bnickname},
		#{bcontent},
		<!-- currval이나 nextval 해도 같은값이나오네 -->
		board_bnum_seq.nextval,
		0,
		0)

		<!-- 게시글 생성후 게시글번호가 생성되고 이 생성된 번호를 읽어온다. BoardVO.setBnum() -->
		<selectKey keyProperty="bnum" resultType="long"
			order="AFTER">
			select board_bnum_seq.currval
			from dual
		</selectKey>
	</insert>

	<!-- 파일 첨부 -->
	<insert id="addFile"
		parameterType="com.kh.portfolio.board.vo.BoardFileVO">
		insert into BOARD_UPLOAD_FILE(
		FID
		,BNUM
		,FNAME
		,FSIZE
		,FTYPE
		,FDATA
		) values (
		board_upload_file_fid_seq.nextval,
		#{bnum},
		#{fname},
		#{fsize},
		#{ftype},
		#{fdata}
		)
	</insert>

	<!-- 게시글 수정 -->
	<update id="modify"
		parameterType="com.kh.portfolio.board.vo.BoardVO">
		update board
		set bcategory = #{boardCategoryVO.cid},
		btitle=#{btitle},
		bcontent=#{bcontent},
		budate = systimestamp
		where bnum=#{bnum}
	</update>
	<!-- 게시글 삭제 -->
	<delete id="delete" parameterType="long">
		delete from board
		where
		bnum=${bnum}
	</delete>
	<!-- 첨부파일 개별 삭제 -->
	<delete id="deleteFile" parameterType="long">
		delete from
		board_upload_file
		where fid=${fid}
	</delete>

	<!-- 게시글 보기 -->
	<select id="view" parameterType="long"
		resultType="com.kh.portfolio.board.vo.BoardVO">

		SELECT t1.bnum,
		t2.cid as "boardCategoryVO.cid",
		t2.cname as
		"boardCategoryVO.cname",
		t1.btitle,
		t1.bid,
		t1.bnickname,
		t1.bcdate,
		t1.budate,
		t1.bhit,
		t1.bcontent,
		t1.bgroup,
		t1.bstep,
		t1.bindent
		FROM board
		t1, board_category t2
		where t1.bcategory = t2.cid
		and t1.bnum = #{bnum}

	</select>
	<!-- 파일 불러오기 -->
	<select id="getFiles"
		resultType="com.kh.portfolio.board.vo.BoardFileVO"
		parameterType="Long">
		select fid, bnum, fname, fsize, ftype, cdate, udate
		from
		board_upload_file
		where bnum=${bnum}
	</select>
	<!-- 조회수 증가 -->
	<update id="updateBhit" parameterType="Long">
		update board
		set
		bhit=bhit+1
		where bnum=${bnum}
	</update>
	<!-- 게시글 목록 -->
	<select id="list3"
		resultType="com.kh.portfolio.board.vo.BoardVO">

		select bnum,
		cid as "boardCategoryVO.cid",
		cname as "boardCategoryVO.cname",
		btitle,
		bnickname,
		bcdate,
		bhit,
		bindent
		from (select row_number() over(order by bgroup desc, bstep asc) as num,
		t1.bnum,
		t2.cid,
		t2.cname,
		t1.btitle,
		t1.bnickname,
		t1.bcdate,
		t1.bhit,
		t1.bindent
		from board t1, board_category t2
		where t1.bcategory = t2.cid)
		where num between #{startRec} and #{endRec}
	</select>

	<!-- 게시글 목록 -->
	<select id="list" resultType="com.kh.portfolio.board.vo.BoardVO">

		select bnum,
		cid as "boardCategoryVO.cid",
		cname as "boardCategoryVO.cname",
		btitle,
		bnickname,
		bcdate,
		bhit,
		bindent
		from (select row_number() over(order by bgroup desc, bstep asc) as num,
		t1.bnum,
		t2.cid,
		t2.cname,
		t1.btitle,
		t1.bnickname,
		t1.bcdate,
		t1.bhit,
		t1.bindent
		from board t1, board_category t2
		where t1.bcategory = t2.cid
		<if test="searchType != null">
			and
			<!-- 검색유형에 따라서 동적으로 바껴야댐 -->
			<choose>
				<!-- 제목+내용 -->
				<when test="searchType == 'TC'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
					or t1.bcontent like '%' || ${keyword} || '%'
				</when>
				<!-- 제목 -->
				<when test="searchType =='T'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
				</when>
				<!-- 내용 -->
				<when test="searchType == 'C'.toString()">
					t1.bcontent like '%' || ${keyword} || '%'
				</when>
				<!-- 별칭 -->
				<when test="searchType == 'N'.toString()">
					t1.bnickname like '%' || ${keyword} || '%'
				</when>
				<!-- 아이디 -->
				<when test="searchType == 'I'.toString()">
					t1.bid like '%' || ${keyword} || '%'
				</when>
				<!-- 전체 -->
				<when test="searchType == 'A'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
					or t1.bcontent like '%' || ${keyword} || '%'
					or t1.bnickname like '%' || ${keyword} || '%'
					or t1.bid like '%' || ${keyword} || '%'
				</when>
			</choose>
		</if>
		)
		where num between #{startRec} and #{endRec}
	</select>
	<!-- 첨부파일 다운로드 -->
	<select id="viewFile" parameterType="long"
		resultType="com.kh.portfolio.board.vo.BoardFileVO">
		select fid, bnum, fname, fsize, ftype, fdata, cdate, udate
		from board_upload_file
		where fid=${fid}
	</select>

	<!-- 답글 작성 -->
	<insert id="reply"
		parameterType="com.kh.portfolio.board.vo.BoardVO">
		insert into board(
		bnum,
		bcategory,
		btitle,
		bid,
		bnickname,
		bcontent,
		bgroup,
		bstep,
		bindent)
		values (
		board_bnum_seq.nextval,
		#{boardCategoryVO.cid},
		#{btitle},
		#{bid},
		#{bnickname},
		#{bcontent},
		${bgroup},
		#{bstep}+1,
		#{bindent}+1)

		<!-- 게시글 생성후 게시글번호가 생성되고 이 생성된 번호를 읽어온다. BoardVO.setBnum() -->
		<selectKey keyProperty="bnum" resultType="long"
			order="AFTER">
			select board_bnum_seq.currval
			from dual
		</selectKey>
	</insert>
	<!-- step 업데이트 -->
	<update id="updateStep" parameterType="map">
		update board
		set bstep = bstep+1
		where bgroup=${bgroup} and bstep > ${bstep}
	</update>
	<select id="totalRecordCount" resultType="int">
		select
		count(*) as
		totalCnt
		from board t1, board_category t2
		where t1.bcategory = t2.cid
	</select>
	<!-- 게시글 총 레코드 수 -->
	<select id="searchedTotalRecordCount" parameterType="map"
		resultType="int">
		select
		count(*) as totalCnt
		from board t1, board_category t2
		where
		t1.bcategory = t2.cid
		<if test="searchType != null">
			and
			<!-- 검색유형에 따라서 동적으로 바껴야댐 -->
			<choose>
				<!-- 제목+내용 -->
				<when test="searchType == 'TC'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
					or t1.bcontent like '%' || ${keyword} || '%'
				</when>
				<!-- 제목 -->
				<when test="searchType =='T'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
				</when>
				<!-- 내용 -->
				<when test="searchType == 'C'.toString()">
					t1.bcontent like '%' || ${keyword} || '%'
				</when>
				<!-- 별칭 -->
				<when test="searchType == 'N'.toString()">
					t1.bnickname like '%' || ${keyword} || '%'
				</when>
				<!-- 아이디 -->
				<when test="searchType == 'I'.toString()">
					t1.bid like '%' || ${keyword} || '%'
				</when>
				<!-- 전체 -->
				<when test="searchType == 'A'.toString()">
					t1.btitle like '%' || ${keyword} || '%'
					or t1.bcontent like '%' || ${keyword} || '%'
					or t1.bnickname like '%' || ${keyword} || '%'
					or t1.bid like '%' || ${keyword} || '%'
				</when>
			</choose>
		</if>
	</select>
</mapper>