<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.RboardDAO-mapper">
	<!-- 댓글 작성 -->
	<insert id="write" parameterType="RboardVO">
		insert into rboard(
		rnum,
		bnum,
		rid,
		rcontent,
		rnickname,
		rgroup,
		rstep,
		rindent)
		values
		(
		rboard_rnum_seq.nextval,
		#{bnum},
		#{rid},
		#{rcontent},
		#{rnickname},
		RBOARD_RNUM_SEQ.currval,
		0,
		0)
		<!-- 게시글 생성후 게시글번호가 생성되고 이생성된 번호를 읽어와서 BoardVO.setBnum()에 넣어줌 -->
		<selectKey keyProperty="rnum" resultType="long"
			order="AFTER">
			select RBOARD_RNUM_SEQ.currval
			from dual
		</selectKey>
	</insert>
	<!-- 답 댓글 작성 -->
	<insert id="">

	</insert>
	<!-- 댓글 수정 -->
	<update id="modify" parameterType="RboardVO">
		update rboard
		set
		rcontent=#{rcontent},
		rudate = systimestamp
		where rnum = #{rnum}
		and rid=#{rid}
	</update>

	<!-- 댓글 삭제 -->
	<delete id="delete" parameterType="long">
		delete from rboard
		where rnum =
		#{rnum}
	</delete>

	<!-- 댓글 목록 -->
	<select id="list" parameterType="map" resultType="RboardVO">
select 
					t1.rnum,
					t1.bnum,
					t1.rid,
					t1.rnickname,
					t1.rcontent,
					t1.rcdate,
					t1.rgroup,
					t1.rstep,
					t1.rindent,
					t1.prnum,
					nvl(t2.good,0) as rgood,
					nvl(t2.bad,0) as rbad,
					t1.pic, t1.ftype
from  
		(select
					rnum,
					bnum,
					rid,
					rnickname,
					rcontent,
					rcdate,
					rgroup,
					rstep,
					rindent,
					prnum,
					pic, ftype
			from (
					select row_number() over( order by rgroup desc, rstep asc) as num,
						t1.rnum,
						t1.bnum,
						t1.rid,
						t1.rnickname,
						t1.rcontent,
						t1.rcdate,
						t1.rgroup,
						t1.rstep,
						t1.rindent,
						t1.prnum,
						t2.pic, t2.ftype
					from 	rboard t1 , member t2
					where t1.rid = t2.id
					and   t1.bnum = #{bnum}
					)
			where num between #{startRec} and #{endRec} ) t1,
       (select rnum, nvl(count(decode(vote,'GOOD',1)),0)good, nvl(count(decode(vote,'BAD',1)),0) bad
        	from rboard_vote
        	group by rnum) t2
where t1.rnum = t2.rnum(+)

	</select>
	<!-- 조회 -->
	<select id="replyView" parameterType="long"
		resultType="RboardVO">
		select
		rnum,
		bnum,
		rid,
		rnickname,
		rcontent,
		rcdate,
		rudate,
		rgroup,
		rstep,
		rindent,
		prnum,
		prid,
		prnickname
		from rboard
		where rnum =#{rnum}
	</select>
	<!-- 대댓글 -->
	<insert id="reply" parameterType="RboardVO">
		insert into rboard(
		rnum,
		bnum,
		rid,
		rnickname,
		rcontent,
		rgroup,
		rstep,
		rindent,
		prnum,
		prid,
		prnickname)
		values (
		rboard_rnum_seq.nextval,
		#{bnum},
		#{rid},
		#{rnickname},
		#{rcontent},
		#{rgroup},
		#{rstep}+1,
		#{rindent}+1,
		#{prnum},
		#{prid},
		#{prnickname}
		)
	</insert>
	<!-- 이전댓글 step업데이트 -->
	<update id="updateStep" parameterType="map">
		update rboard
		set rstep =
		rstep+1
		where rgroup = #{rgroup}
		and rstep > #{rstep}
	</update>
	<!-- 투표 -->
	<!-- CDATA: SQL내용에 <,>,특수문자를 xml파서에서 해석을 하지 않고 문자열로 인식을함 -->
	<update id="vote" parameterType="VoteVO">
	<![CDATA[
		MERGE INTO rboard_vote
					USING DUAL
					ON (rnum= #{rnum} and bnum=#{bnum} and rid=#{rid})
	  /* 있으면 */
		WHEN MATCHED THEN
    UPDATE SET vote=#{vote}
	  /* 없으면 */
		WHEN NOT MATCHED THEN
    INSERT(rnum, bnum, rid, vote) VALUES(#{rnum},#{bnum},#{rid},#{vote})
		]]>
	</update>
	
	<!-- 게시글 총 레코드 수 -->
<select id="totalRecordCount" parameterType="long"
				resultType="int">
					 select count(*) as totalRecCnt
					   from rboard
					  where bnum = #{bnum}
</select>

<select id="searchedTotalRecordCount"
				parameterType="map"
				resultType="int">

					 	select count(*) as totalRecCnt
					   from rboard t1
					  where bnum = #{bnum}
          	 <if test="searchType != null" >
          	 	 and  
          	 <choose>
          	 		<!-- 내용 -->
          	 		<when test="searchType == 'C'.toString()">
						 		  t1.bcontent  like '%' || #{keyword} || '%'	             	 		
          	 		</when>
          	 		<!-- 별칭 -->
          	 		<when test="searchType == 'N'.toString()">
						 	  	t1.rnickname  like '%' || #{keyword} || '%'           	 		
          	 		</when>
          	 		<!-- 아이디 -->
          	 		<when test="searchType == 'I'.toString()">
						 		  t1.rid  like '%' || #{keyword} || '%'           	 		
          	 		</when>
          	 		<!-- 전체 -->
           	 	<when test="searchType == 'A'.toString()">
						      t1.rcontent  like '%' || #{keyword} || '%' or	            	 	
						      t1.rnickname like '%' || #{keyword} || '%' or	            	 	
						      t1.rid  		 like '%' || #{keyword} || '%' 	            	 	
           	 	</when>
          	 </choose>
          	 </if>
</select>
</mapper>